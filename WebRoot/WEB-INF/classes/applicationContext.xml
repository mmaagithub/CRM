<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd ">

	<!-- 读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties,classpath:redis.properties" />
	<!-- 配置c3p0连接池 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
<import resource="spring-redis.xml" />
	
	
	<!-- 核心事务管理器 -->
	<bean name="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- XML配置aop事务，配置通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="persist*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="true" />
			<tx:method name="*" isolation="REPEATABLE_READ"
				propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>
<!-- 	事务的织入 -->
	<aop:config>
		<aop:pointcut expression="execution(* service.impl.*ServiceImpl.*(..))" id="txPc" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
	</aop:config>

	<!-- 注解配置aop事务 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->

	<!-- 将sessionFactory配置到spring容器 -->
	<bean name="sessionFactory"
		class=" org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 将连接池注入到sessionFactory, hibernate会通过连接池获得连接 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate基本信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- 必选配置 -->
				<!-- <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop> 
					<prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/crm</prop> 
					<prop key="hibernate.connection.username">root</prop> <prop key="hibernate.connection.password">root</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 可选配置 -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 引入orm元数据,指定orm元数据所在的包路径,spring会自动读取包中的所有配置 -->
		<property name="mappingDirectoryLocations" value="classpath:domain"></property>
	</bean>

	<!-- action对象的作用域范围一定是多例的，符合struts2每次请求创建一个新的action -->
	<bean name="userAction" class="web.action.UserAction" scope="prototype">
		<property name="us" ref="userService"></property>
	</bean>
	<bean name="customerAction" class="web.action.CustomerAction"
		scope="prototype">
		<property name="cs" ref="customerService"></property>
	</bean>
	<bean name="baseDictAction" class="web.action.BaseDictAction"
		scope="prototype">
		<property name="baseDictService" ref="baseDictService"></property>
	</bean>
	<bean name="linkManAction" class="web.action.LinkManAction" scope="prototype">
		<property name="lms" ref="linkManService"></property>
	</bean>
	<bean name="saleVisitAction" class="web.action.SaleVisitAction"
		scope="prototype">
		<property name="svs" ref="saleVisitService"></property>
	</bean>

	<bean name="userService" class="service.impl.UserServiceImpl">
		<property name="ud" ref="userDao"></property>
	</bean>
	<bean name="customerService" class="service.impl.CustomerServiceImpl">
		<property name="cd" ref="customerDao"></property>
	</bean>
	<bean name="baseDictService" class="service.impl.BaseDictServiceImpl">
		<property name="bdd" ref="baseDictDao"></property>
	</bean>
	<bean name="linkManService" class="service.impl.LinkManServiceImpl">
		<property name="lmd" ref="linkManDao"></property>
	</bean>
	<bean name="saleVisitService" class="service.impl.SaleVisitServiceImpl">
		<property name="svd" ref="saleVisitDao"></property>
	</bean>

	<bean name="userDao" class="dao.impl.UserDaoImpl">
		<!-- 注入sessionFactory -->
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="customerDao" class="dao.impl.CustomerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="baseDictDao" class="dao.impl.BaseDictDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="linkManDao" class="dao.impl.LinkManDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="saleVisitDao" class="dao.impl.SaleVisitDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
 	<bean id="redisUtils" class="redis.RedisUtils" >
          <property name="redisTemplate" ref="redisTemplate" />
    </bean >
</beans>